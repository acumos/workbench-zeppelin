{
  "paragraphs": [
    {
      "text": "%livy2.pyspark\n\nfrom numpy import loadtxt\nfrom xgboost import XGBClassifier\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.metrics import accuracy_score\n\n# load data\ndataset \u003d loadtxt(\u0027/tmp/raw-pima-indians-diabetes.csv\u0027, delimiter\u003d\",\")\n# split data into X and y\nX \u003d dataset[:,0:8]\nY \u003d dataset[:,8]\n# split data into train and test sets\nseed \u003d 7\ntest_size \u003d 0.33\nX_train, X_test, y_train, y_test \u003d train_test_split(X, Y, test_size\u003dtest_size, random_state\u003dseed)\n# fit model no training data\nmodel \u003d XGBClassifier()\nmodel.fit(X_train, y_train)\n# make predictions for test data\ny_pred \u003d model.predict(X_test)\npredictions \u003d [round(value) for value in y_pred]\n# evaluate predictions\naccuracy \u003d accuracy_score(y_test, predictions)\nprint(\"Accuracy: %.2f%%\" % (accuracy * 100.0))\n\n",
      "user": "anonymous",
      "dateUpdated": "2018-09-19 18:24:58.317",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "ERROR",
        "msg": [
          {
            "type": "TEXT",
            "data": "javax.security.auth.login.LoginException: Unable to obtain password from user\n\n\tat com.sun.security.auth.module.Krb5LoginModule.promptForPass(Krb5LoginModule.java:897)\n\tat com.sun.security.auth.module.Krb5LoginModule.attemptAuthentication(Krb5LoginModule.java:760)\n\tat com.sun.security.auth.module.Krb5LoginModule.login(Krb5LoginModule.java:617)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat javax.security.auth.login.LoginContext.invoke(LoginContext.java:755)\n\tat javax.security.auth.login.LoginContext.access$000(LoginContext.java:195)\n\tat javax.security.auth.login.LoginContext$4.run(LoginContext.java:682)\n\tat javax.security.auth.login.LoginContext$4.run(LoginContext.java:680)\n\tat java.security.AccessController.doPrivileged(Native Method)\n\tat javax.security.auth.login.LoginContext.invokePriv(LoginContext.java:680)\n\tat javax.security.auth.login.LoginContext.login(LoginContext.java:587)\n\tat org.springframework.security.kerberos.client.KerberosRestTemplate.doExecute(KerberosRestTemplate.java:185)\n\tat org.springframework.web.client.RestTemplate.execute(RestTemplate.java:580)\n\tat org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:498)\n\tat org.apache.zeppelin.livy.BaseLivyInterpreter.callRestAPI(BaseLivyInterpreter.java:706)\n\tat org.apache.zeppelin.livy.BaseLivyInterpreter.callRestAPI(BaseLivyInterpreter.java:686)\n\tat org.apache.zeppelin.livy.BaseLivyInterpreter.getLivyVersion(BaseLivyInterpreter.java:472)\n\tat org.apache.zeppelin.livy.BaseLivyInterpreter.open(BaseLivyInterpreter.java:161)\n\tat org.apache.zeppelin.interpreter.LazyOpenInterpreter.open(LazyOpenInterpreter.java:69)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:617)\n\tat org.apache.zeppelin.scheduler.Job.run(Job.java:188)\n\tat org.apache.zeppelin.scheduler.FIFOScheduler$1.run(FIFOScheduler.java:140)\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:748)\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1537381491623_927132610",
      "id": "20180523-193420_662935404",
      "dateCreated": "2018-09-19 18:24:51.623",
      "dateStarted": "2018-09-19 18:24:58.351",
      "dateFinished": "2018-09-19 18:25:00.870",
      "status": "ABORT",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%livy.pyspark\n",
      "user": "anonymous",
      "dateUpdated": "2018-09-19 18:24:51.626",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1537381491626_-178910674",
      "id": "20180523-194629_65851690",
      "dateCreated": "2018-09-19 18:24:51.626",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "Spark2 ML Examples/Spark2 ML - pyspark - XGBoost",
  "id": "2DSYYUGBD",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {
    "livy2:shared_process": [],
    "livy:shared_process": []
  },
  "config": {
    "isZeppelinNotebookCronEnable": false
  },
  "info": {}
}